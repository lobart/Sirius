{"ast":null,"code":"import React from'react';import DeckGL from'@deck.gl/react';import{MapView}from'@deck.gl/core';import{TileLayer}from'@deck.gl/geo-layers';import{BitmapLayer,PathLayer}from'@deck.gl/layers';var INITIAL_VIEW_STATE={latitude:43.405744,longitude:39.954881,zoom:15,maxZoom:20,maxPitch:89,bearing:0};/* global window */var devicePixelRatio=typeof window!=='undefined'&&window.devicePixelRatio||1;function getTooltip(_ref){var tile=_ref.tile;return tile&&\"tile: x: \".concat(tile.x,\", y: \").concat(tile.y,\", z: \").concat(tile.z);}export default function Map(_ref2){var _ref2$showBorder=_ref2.showBorder,showBorder=_ref2$showBorder===void 0?false:_ref2$showBorder,_ref2$onTilesLoad=_ref2.onTilesLoad,onTilesLoad=_ref2$onTilesLoad===void 0?null:_ref2$onTilesLoad;var tileLayer=new TileLayer({// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Tile_servers\ndata:['https://a.tile.openstreetmap.org/{z}/{x}/{y}.png','https://b.tile.openstreetmap.org/{z}/{x}/{y}.png','https://c.tile.openstreetmap.org/{z}/{x}/{y}.png'],pickable:true,onViewportLoad:onTilesLoad,autoHighlight:showBorder,highlightColor:[60,60,60,40],// https://wiki.openstreetmap.org/wiki/Zoom_levels\nminZoom:0,maxZoom:19,tileSize:512/devicePixelRatio,renderSubLayers:function renderSubLayers(props){var _props$tile$bbox=props.tile.bbox,west=_props$tile$bbox.west,south=_props$tile$bbox.south,east=_props$tile$bbox.east,north=_props$tile$bbox.north;return[new BitmapLayer(props,{data:null,image:props.data,bounds:[west,south,east,north]}),showBorder&&new PathLayer({id:\"\".concat(props.id,\"-border\"),data:[[[west,north],[west,south],[east,south],[east,north],[west,north]]],getPath:function getPath(d){return d;},getColor:[255,0,0],widthMinPixels:1})];}});return/*#__PURE__*/React.createElement(DeckGL,{layers:[tileLayer],views:new MapView({repeat:true}),initialViewState:INITIAL_VIEW_STATE,controller:true,getTooltip:getTooltip});}","map":{"version":3,"sources":["C:/Users/Archi/React_ex/todo/src/components/map/map.js"],"names":["React","DeckGL","MapView","TileLayer","BitmapLayer","PathLayer","INITIAL_VIEW_STATE","latitude","longitude","zoom","maxZoom","maxPitch","bearing","devicePixelRatio","window","getTooltip","tile","x","y","z","Map","showBorder","onTilesLoad","tileLayer","data","pickable","onViewportLoad","autoHighlight","highlightColor","minZoom","tileSize","renderSubLayers","props","bbox","west","south","east","north","image","bounds","id","getPath","d","getColor","widthMinPixels","repeat"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView} from '@deck.gl/core';\r\nimport {TileLayer} from '@deck.gl/geo-layers';\r\nimport {BitmapLayer, PathLayer} from '@deck.gl/layers';\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  latitude: 43.405744, \r\n  longitude: 39.954881,\r\n  zoom: 15,\r\n  maxZoom: 20,\r\n  maxPitch: 89,\r\n  bearing: 0\r\n};\r\n\r\n/* global window */\r\nconst devicePixelRatio = (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\r\n\r\nfunction getTooltip({tile}) {\r\n  return tile && `tile: x: ${tile.x}, y: ${tile.y}, z: ${tile.z}`;\r\n}\r\n\r\nexport default function Map({showBorder = false, onTilesLoad = null}) {\r\n  const tileLayer = new TileLayer({\r\n    // https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Tile_servers\r\n    data: [\r\n      'https://a.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n      'https://b.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n      'https://c.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n    ],\r\n\r\n    pickable: true,\r\n    onViewportLoad: onTilesLoad,\r\n    autoHighlight: showBorder,\r\n    highlightColor: [60, 60, 60, 40],\r\n    // https://wiki.openstreetmap.org/wiki/Zoom_levels\r\n    minZoom: 0,\r\n    maxZoom: 19,\r\n    tileSize: 512 / devicePixelRatio,\r\n\r\n    renderSubLayers: props => {\r\n      const {\r\n        bbox: {west, south, east, north}\r\n      } = props.tile;\r\n\r\n      return [\r\n        new BitmapLayer(props, {\r\n          data: null,\r\n          image: props.data,\r\n          bounds: [west, south, east, north]\r\n        }),\r\n        showBorder &&\r\n          new PathLayer({\r\n            id: `${props.id}-border`,\r\n            data: [[[west, north], [west, south], [east, south], [east, north], [west, north]]],\r\n            getPath: d => d,\r\n            getColor: [255, 0, 0],\r\n            widthMinPixels: 1\r\n          })\r\n      ];\r\n    }\r\n  });\r\n\r\n  return (\r\n    <DeckGL\r\n      layers={[tileLayer]}\r\n      views={new MapView({repeat: true})}\r\n      initialViewState={INITIAL_VIEW_STATE}\r\n      controller={true}\r\n      getTooltip={getTooltip}\r\n    />\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}