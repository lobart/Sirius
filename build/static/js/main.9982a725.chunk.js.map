{"version":3,"sources":["components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/search-form/index.js","components/search-form/search-form.js","components/map/map.js","components/map/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["ToDoListItem","this","props","label","onDeleted","onToggleDone","onToggleImportant","done","important","classNames","console","log","className","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","ItemAddForm","state","onLabelChange","e","setState","target","value","onSubmit","preventDefault","onItemAdded","onChange","placeholder","SearchForm","term","style","fontSize","INITIAL_VIEW_STATE","latitude","longitude","zoom","maxZoom","maxPitch","bearing","devicePixelRatio","window","getTooltip","tile","x","y","z","Map","showBorder","onTilesLoad","tileLayer","TileLayer","data","pickable","onViewportLoad","autoHighlight","highlightColor","minZoom","tileSize","renderSubLayers","bbox","west","south","east","north","BitmapLayer","image","bounds","PathLayer","getPath","d","getColor","widthMinPixels","layers","views","MapView","repeat","initialViewState","controller","ligbox","Hed","App","maxId","todoData","createToDoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","stayItem","forEach","index","array","includes","oldItem","onSearchChange","items","length","filter","indexOf","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9982a725.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class ToDoListItem extends Component{\r\n    render (){  \r\n    const {label, onDeleted, onToggleDone, onToggleImportant, done, important} = this.props;\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n        classNames += ' done';\r\n        console.log(classNames);\r\n    };\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n    return (\r\n        <div className={classNames}>\r\n            <span className = 'todo-list-item-label'\r\n            onClick = {onToggleDone}>\r\n            {label}\r\n            </span>\r\n            <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\"\r\n                onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\" />\r\n            </button>\r\n\r\n            <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\" onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n        </div>\r\n    )};\r\n    \r\n}\r\n","import React from \"react\";\r\nimport ToDoListItem from \"../todo-list-item/todo-list-item\";\r\nimport './todo-list.css';\r\n\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return <li key = {id} className = \"list-group-item\"> \r\n        <ToDoListItem {... itemProps} \r\n        onToggleDone={() => onToggleDone(id)}\r\n        onToggleImportant={() => onToggleImportant(id)}\r\n        onDeleted={() => onDeleted(id)}/></li>;\r\n    });\r\n    return(\r\n      <ul className=\"list-group todo-list\" > \r\n        {elements }\r\n      </ul>\r\n    );\r\n};\r\nexport default TodoList;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component{\r\n    state = {\r\n        label: ''\r\n    };\r\n    onLabelChange = (e)=>{\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n    onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n    render(){\r\n        return(\r\n            <form className='item-add-form d-flex' \r\n            onSubmit={this.onSubmit}>\r\n                <input type='text'\r\n                        className='form-control'\r\n                        onChange={this.onLabelChange}\r\n                        placeholder='What needs to be done?' \r\n                        value={this.state.label}/>\r\n                <button className='btn btn-outline-secondary'>\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )      \r\n        \r\n    }\r\n}","import SearchForm from './search-form';\r\n\r\nexport default SearchForm;","import React, {Component} from 'react';\r\nimport './search-form.css';\r\n\r\nexport default class SearchForm extends Component{\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onLabelChange = (e)=>{\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onChange(term);\r\n    };\r\n    \r\n    render(){\r\n        const searchStyle = {\r\n            fontSize: '25px'\r\n        };\r\n        return(\r\n            <form className='search-formt d-flex'>\r\n                <input style = {searchStyle} \r\n                onChange={this.onLabelChange}\r\n                value={this.state.term}\r\n                placeholder = \"search\" />\r\n                <button className='btn btn-outline-secondary'>\r\n                    All\r\n                </button>\r\n                <button className='btn btn-outline-secondary'>\r\n                    Active\r\n                </button>\r\n                <button className='btn btn-outline-secondary'>\r\n                    Done\r\n                </button>\r\n            </form>\r\n        )      \r\n        \r\n    }\r\n}","import React from 'react';\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView} from '@deck.gl/core';\r\nimport {TileLayer} from '@deck.gl/geo-layers';\r\nimport {BitmapLayer, PathLayer} from '@deck.gl/layers';\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  latitude: 43.405744, \r\n  longitude: 39.954881,\r\n  zoom: 15,\r\n  maxZoom: 20,\r\n  maxPitch: 89,\r\n  bearing: 0\r\n};\r\n\r\n/* global window */\r\nconst devicePixelRatio = (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\r\n\r\nfunction getTooltip({tile}) {\r\n  return tile && `tile: x: ${tile.x}, y: ${tile.y}, z: ${tile.z}`;\r\n}\r\n\r\nexport default function Map({showBorder = false, onTilesLoad = null}) {\r\n  const tileLayer = new TileLayer({\r\n    // https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Tile_servers\r\n    data: [\r\n      'https://a.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n      'https://b.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n      'https://c.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n    ],\r\n\r\n    pickable: true,\r\n    onViewportLoad: onTilesLoad,\r\n    autoHighlight: showBorder,\r\n    highlightColor: [60, 60, 60, 40],\r\n    // https://wiki.openstreetmap.org/wiki/Zoom_levels\r\n    minZoom: 0,\r\n    maxZoom: 19,\r\n    tileSize: 512 / devicePixelRatio,\r\n\r\n    renderSubLayers: props => {\r\n      const {\r\n        bbox: {west, south, east, north}\r\n      } = props.tile;\r\n\r\n      return [\r\n        new BitmapLayer(props, {\r\n          data: null,\r\n          image: props.data,\r\n          bounds: [west, south, east, north]\r\n        }),\r\n        showBorder &&\r\n          new PathLayer({\r\n            id: `${props.id}-border`,\r\n            data: [[[west, north], [west, south], [east, south], [east, north], [west, north]]],\r\n            getPath: d => d,\r\n            getColor: [255, 0, 0],\r\n            widthMinPixels: 1\r\n          })\r\n      ];\r\n    }\r\n  });\r\n\r\n  return (\r\n    <DeckGL\r\n      layers={[tileLayer]}\r\n      views={new MapView({repeat: true})}\r\n      initialViewState={INITIAL_VIEW_STATE}\r\n      controller={true}\r\n      getTooltip={getTooltip}\r\n    />\r\n  );\r\n}\r\n\r\n","import Map from './map';\r\n\r\nexport default Map;","import React, {Component} from 'react';\r\nimport TodoList from '../todo-list/todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\nimport SearchForm from '../search-form';\r\nimport Map from '../map';\r\nconst ligbox = <span>Login please</span>;\r\nconst login = false;\r\n\r\nconst Hed = () => {\r\n    return (\r\n      <h1>My to do List</h1>\r\n    );\r\n  };\r\nexport default class App extends Component{\r\n    maxId = 100;\r\n    createToDoItem(label){\r\n        return {\r\n            label: label,\r\n            important: false,\r\n            id: this.maxId++,\r\n            done: false\r\n        }\r\n    }\r\n    state = {\r\n        todoData : [\r\n            this.createToDoItem('Drink coffee'),\r\n            this.createToDoItem('Write code'),\r\n            this.createToDoItem('Sleep')\r\n        ],\r\n        term : \"\"\r\n    };\r\n    deleteItem = (id) => {\r\n        this.setState (({todoData}) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const newArray = [...todoData.slice(0,idx), ...todoData.slice(idx+1)];\r\n            return { todoData : newArray};\r\n        });\r\n    };\r\n    addItem = (text) => {\r\n        console.log('added: ',text);\r\n        const newItem = this.createToDoItem(text);\r\n        this.setState(({todoData}) => {\r\n            const newAr = [\r\n                ...todoData,\r\n                newItem\r\n            ]\r\n            return {todoData : newAr};\r\n        });\r\n        \r\n    };\r\n    stayItem = (text) => {\r\n        console.log('search: ',text);\r\n        this.setState(({todoData}) => {\r\n        todoData.forEach(function(item, index, array) {\r\n            if (!item.label.includes(text)){\r\n                console.log('it: ',item, index);\r\n                const idx = index;\r\n                const newArray = [...todoData.slice(0,idx), ...todoData.slice(idx+1)];\r\n                return { todoData : newArray};\r\n            };\r\n          });\r\n        });\r\n    };\r\n    onToggleImportant = (id) =>{\r\n        this.setState(({todoData})=>{\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const oldItem = todoData[idx];\r\n            const newItem = {...oldItem, important: !oldItem.important};\r\n            const newArray = [...todoData.slice(0,idx),newItem, ...todoData.slice(idx+1)];\r\n            return { todoData : newArray};\r\n        });\r\n    };\r\n    onToggleDone = (id) =>{\r\n        this.setState(({todoData})=>{\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            const oldItem = todoData[idx];\r\n            const newItem = {...oldItem, done: !oldItem.done};\r\n            const newArray = [...todoData.slice(0,idx),newItem, ...todoData.slice(idx+1)];\r\n            return { todoData : newArray};\r\n        });\r\n    };\r\n    onSearchChange = (term)=>{\r\n        this.setState({term});\r\n    };\r\n    search (items, term) {\r\n        if (term.length === 0){\r\n            return items;\r\n        }\r\n        return items.filter((item)=>{\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    }\r\n    render(){\r\n        const {todoData, term} = this.state;\r\n        const visibleItems = this.search(todoData, term);\r\n    return (\r\n      \r\n      <div>\r\n        {login ? null : ligbox }\r\n        <Hed />\r\n        <SearchForm onChange = {this.onSearchChange}/>\r\n        <TodoList todos = {visibleItems} \r\n        onToggleDone={this.onToggleDone}\r\n        onToggleImportant={this.onToggleImportant}\r\n        onDeleted={this.deleteItem} />\r\n        <ItemAddForm onItemAdded={this.addItem}/>\r\n        <Map />\r\n      </div>\r\n    );\r\n    }\r\n  };","import App from './App';\r\n\r\nexport default App;","\nimport ReactDOM from \"react-dom\";\nimport React from 'react';\nimport App from './components/App';\nReactDOM.render(<App />,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}